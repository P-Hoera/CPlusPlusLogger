#pragma once

#include "LoggerAPI.h"

#include "LogViewerNetworkRPCSinkBase.h"

#pragma warning( push )
#pragma warning( disable : 4251 )

namespace Log
{
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Sink targeting a network RPC connection. Is fully initialized upon construction.
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	class LOGGER_API LogViewerNetworkRPCSink final : public LogViewerNetworkRPCSinkBase
	{
		friend class SinkFactory; //!< Friend to allow construction only from SinkFactory.
	public:
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// \brief Destructor.
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		virtual ~LogViewerNetworkRPCSink();

	private:
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// \brief Constructor.
		///
		/// \param sinkName A name for the sink that can be used to identify it.
		/// \param networkAddress The network address to use.
		///
		/// \exception std::runtime_error Thrown if the connection to the server could not be established.
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		LogViewerNetworkRPCSink(const std::string& sinkName, const std::string& networkAddress);
	};
}

#pragma warning( pop ) 