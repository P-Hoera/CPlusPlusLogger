#pragma once

#include "LoggerAPI.h"

#include "FileSinkBase.h"

#pragma warning( push )
#pragma warning( disable : 4251 )

namespace Log
{
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Sink targeting a single log file. Is fully initialized upon construction.
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	class LOGGER_API FileSink final : public FileSinkBase
	{
		friend class SinkFactory; //!< Friend to allow construction only from SinkFactory.
	public:
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// \brief Destructor.
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		virtual ~FileSink();

	private:
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/// \brief Constructor.
		///
		/// \param sinkName A name for the sink that can be used to identify it.
		/// \param fileName The file to be used as sink target.
		///
		/// \exception std::invalid_argument Thrown if the file cannot be opened for writing.
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		FileSink(const std::string& sinkName, const std::string& fileName);
	};
}

#pragma warning( pop ) 